/*BASE DE DATOS DE TELEFONIA*/

/*BD*/

/*CREACION DE BASE DE DATOS*/


/*CREATE*/

CREATE DATABASE TELEFONIA;

/*PONER EN USO*/
USE TELEFONIA;

/*CREACION DE TABLAS*/

/*TABLAS*/

/*TABLA PLANES*/

CREATE TABLE PLANES(

	COD_PLAN INT IDENTITY PRIMARY KEY,
	NOMBRE_PLAN VARCHAR(50),
	VALOR_CUOTA INT,
	MINUTOS INT,
	NO_MENSAJES INT,
);

/*TABLA ESTADO_CLIENTES*/

CREATE TABLE ESTADO_CLIENTES(
	
	COD_ESTADO INT IDENTITY PRIMARY KEY,
	NOMBRE_ESTADO VARCHAR(50),
	DESCRIPCION VARCHAR(150),

);

/*TABLA EMPLEADOS*/

CREATE TABLE EMPLEADOS(
	
	COD_EMPLEADO INT IDENTITY PRIMARY KEY,
	NOMBRE_EMPLEADO VARCHAR(50),
	APELLIDO_EMPLEADO VARCHAR(50),
	EMAIL VARCHAR(50),
	CONTRASENIA VARCHAR(50),

);

/*TABLA CLIENTES*/

CREATE TABLE CLIENTES(
	
	MOVIL INT,
	NOMBRE_CLIENTE VARCHAR(50),
	APELLIDO_CLIENTE VARCHAR(50),
	FECHA_PAGO DATE,
	MESES_ATRASO INT,
	COD_ESTADO INT NOT NULL,
	COD_PLAN INT NOT NULL,
	COD_EMPLEADO INT NOT NULL,
	CONSTRAINT MOVIL_PK PRIMARY KEY(MOVIL),
	CONSTRAINT COD_ESTADO_FK FOREIGN KEY(COD_ESTADO) REFERENCES ESTADO_CLIENTES(COD_ESTADO),
	CONSTRAINT COD_PLAN_FK FOREIGN KEY(COD_PLAN) REFERENCES PLANES(COD_PLAN),
	CONSTRAINT COD_EMPLEADO FOREIGN KEY(COD_EMPLEADO) REFERENCES EMPLEADOS(COD_EMPLEADO),

);


/*ELIMINAR UNA TABLA*/

/*EJEMPLO*/

DROP TABLE CLIENTES;

/*ELIMINAR UN COLUMNA*/

/*EJEMPLO*/

ALTER TABLE EMPLEADOS DROP COLUMN EMAIL; 

SELECT * FROM EMPLEADOS;

/*AGREGAR UNA COLUMNA*/

/*EJEMPLO*/

ALTER TABLE EMPLEADOS ADD EMAIL VARCHAR(60);

/*CAMBIAR DATOS EN COLUMNAS*/

/*EJEMPLO*/

UPDATE EMPLEADOS SET EMAIL='PAPAMAMA@GMAIL.COM' WHERE COD_EMPLEADO = 3;

/*COMO ELIMINAR UNA FILA*/

/*EJEMPLO*/

DELETE FROM ESTADO_CLIENTES WHERE COD_ESTADO = 4;

/*COMO MODIFICAR UN REGISTRO*/

ALTER TABLE ESTADO_CLIENTES ALTER COLUMN COD_ESTADO CHAR(100);










/*CONSULTAS DE LA BASES DE DATOS*/

/*INSERTAR REGISTROS*/

/*INSERT*/

/*REGISTROS DE PLANES*/

INSERT INTO PLANES VALUES('TIK TAK',50,50,50);
INSERT INTO PLANES VALUES('TIK TOK',150,150,150);
INSERT INTO PLANES VALUES('TIK TUK',250,250,250);

/*REGISTROS ESTADO DEL CLIENTES*/

INSERT INTO ESTADO_CLIENTES VALUES('ALTO','TIENE UN ALTO NIVEL DE COMPRAS');
INSERT INTO ESTADO_CLIENTES VALUES('PROMEDIO','TIENE UN PROMEDIO DE LA MITAD DEL NIVEL DE COMPRAS');
INSERT INTO ESTADO_CLIENTES VALUES('BAJO','TIENE UN BAJO NIVEL DE COMPRAS');

/*REGISTROS DE EMPLEADOS*/

INSERT INTO EMPLEADOS VALUES('GERSON', 'BOCHE', 'GERON@GMAIL.COM','GERSON');
INSERT INTO EMPLEADOS VALUES('DANIEL', 'PERALTA', 'DANIEL@GMAIL.COM','DANIEL');
INSERT INTO EMPLEADOS VALUES('PAPA','MAMA','MAMAPAPA@GMAIL.COM','PAPA');

/*REGISTROS DE CLIENTES*/

INSERT INTO CLIENTES VALUES(12457845, 'GERSON', 'BOCHE', '04-03-2020', 0, 1, 1, 1 );
INSERT INTO CLIENTES VALUES(98653201, 'DANIEL', 'PERALTA','04-03-2020', 0, 1, 1, 1);
INSERT INTO CLIENTES VALUES(01254785, 'PAPA','MAMA', '04-03-2020', 0, 1, 1, 1);



/*SELECCIONAR TABLAS*/

/*PLANES*/

SELECT * FROM PLANES;

/*ESTADO_CLIENTES*/

SELECT * FROM ESTADO_CLIENTES;

/*EMPLEADOS*/

SELECT * FROM EMPLEADOS;

/*CLIENTES*/

SELECT * FROM CLIENTES;


/*SELECT*/

/*SELECT DISTICT*/

/*FUNCION DISTINCT SE UTILIZA PARA QUE AL MOMENTO DE DUPLICAR LOS DATOS NO SE MUESTRE */

SELECT DISTINCT  NOMBRE_ESTADO FROM ESTADO_CLIENTES;

/*SELECT TOP*/

/*FUNCION TOP SE UTILIZA PARA MOSTRAR CIERTA CANTIDAD DE DATOS O FILAS MEJOR DICHO*/

SELECT TOP 2 PERCENT * FROM ESTADO_CLIENTES;



/*JOINS*/

/*INNER JOIN*/

SELECT C.MOVIL, C.NOMBRE_CLIENTE, C.APELLIDO_CLIENTE, EC.NOMBRE_ESTADO, EC.DESCRIPCION
FROM CLIENTES C INNER JOIN ESTADO_CLIENTES EC 
ON C.COD_ESTADO = EC.COD_ESTADO
ORDER BY C.NOMBRE_CLIENTE DESC;

/*JOIN LEFT*/

SELECT C.MOVIL, C.NOMBRE_CLIENTE, C.APELLIDO_CLIENTE, EC.NOMBRE_ESTADO, EC.DESCRIPCION
FROM CLIENTES C LEFT JOIN ESTADO_CLIENTES EC 
ON C.COD_ESTADO = EC.COD_ESTADO
ORDER BY C.NOMBRE_CLIENTE DESC;

/*JOIN RIGHT*/

SELECT C.MOVIL, C.NOMBRE_CLIENTE, C.APELLIDO_CLIENTE, EC.NOMBRE_ESTADO, EC.DESCRIPCION
FROM CLIENTES C RIGHT JOIN ESTADO_CLIENTES EC 
ON C.COD_ESTADO = EC.COD_ESTADO
ORDER BY C.NOMBRE_CLIENTE DESC;

/*JOIN FULL OUTER*/

SELECT C.MOVIL AS TELEFONOMOVIL , C.NOMBRE_CLIENTE AS NOMBRE, C.APELLIDO_CLIENTE AS APELLIDO, EC.NOMBRE_ESTADO AS ESTADO, EC.DESCRIPCION AS DESCRIPCION
FROM CLIENTES C FULL OUTER JOIN ESTADO_CLIENTES EC 
ON C.COD_ESTADO = EC.COD_ESTADO
ORDER BY C.NOMBRE_CLIENTE DESC;

/*COMPROVACION LOGICA*/

SELECT C.MOVIL AS TELEFONOMOVIL , C.NOMBRE_CLIENTE AS NOMBRE, C.APELLIDO_CLIENTE AS APELLIDO, EC.NOMBRE_ESTADO AS ESTADO, EC.DESCRIPCION AS DESCRIPCION
FROM CLIENTES C FULL OUTER JOIN ESTADO_CLIENTES EC 
ON C.COD_ESTADO = EC.COD_ESTADO
WHERE C.NOMBRE_CLIENTE = 'PAPA' OR C.APELLIDO_CLIENTE = 'BOCHE' 
ORDER BY C.NOMBRE_CLIENTE DESC;






/*VISTAS*/

/*CREACION DE UNA VISTA*/

/*CREATE VIEW*/

CREATE VIEW VISTA_EMPLEADOS AS 
SELECT C.MOVIL AS TELEFONOMOVIL , C.NOMBRE_CLIENTE AS NOMBRE, C.APELLIDO_CLIENTE AS APELLIDO, EC.NOMBRE_ESTADO AS ESTADO, EC.DESCRIPCION AS DESCRIPCION
FROM CLIENTES C INNER JOIN ESTADO_CLIENTES EC
ON C.COD_ESTADO = EC.COD_ESTADO;









